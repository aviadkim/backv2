steps:
  # Print directory structure for debugging
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args: ['-c', 'ls -la && echo "Current directory: $(pwd)"']

  # Build the DevDocs container image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/devdocs-app:$COMMIT_SHA', './DevDocs']

  # Push the DevDocs container image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/devdocs-app:$COMMIT_SHA']

  # Deploy DevDocs container image to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'devdocs-app'
      - '--image=gcr.io/$PROJECT_ID/devdocs-app:$COMMIT_SHA'
      - '--region=me-west1'
      - '--platform=managed'
      - '--allow-unauthenticated'
      - '--set-env-vars=NODE_ENV=production'

  # Build the MCP server container image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/devdocs-mcp-server:$COMMIT_SHA', '-f', './DevDocs/Dockerfile.simple', './DevDocs']

  # Push the MCP server container image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/devdocs-mcp-server:$COMMIT_SHA']

  # Deploy MCP server container image to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'devdocs-mcp-server'
      - '--image=gcr.io/$PROJECT_ID/devdocs-mcp-server:$COMMIT_SHA'
      - '--region=me-west1'
      - '--platform=managed'
      - '--allow-unauthenticated'
      - '--set-env-vars=GOOGLE_CLOUD_PROJECT_ID=$PROJECT_ID'

# Store images in Google Container Registry
images:
  - 'gcr.io/$PROJECT_ID/devdocs-app:$COMMIT_SHA'
  - 'gcr.io/$PROJECT_ID/devdocs-mcp-server:$COMMIT_SHA'
